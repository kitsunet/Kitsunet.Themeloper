<?php
namespace Kitsunet\Themeloper\ViewHelpers;

/*                                                                        *
 * This script belongs to the TYPO3 Flow package "Kitsunet.Themeloper".   *
 *                                                                        *
 * It is free software; you can redistribute it and/or modify it under    *
 * the terms of the GNU Lesser General Public License, either version 3   *
 * of the License, or (at your option) any later version.                 *
 *                                                                        *
 * The TYPO3 project - inspiring people to share!                         *
 *                                                                        */

use TYPO3\Flow\Annotations as Flow;
use TYPO3\Fluid\Core\ViewHelper\AbstractViewHelper;
use TYPO3\TYPO3CR\Domain\Model\NodeInterface;

/**
 * ViewHelper to render a content collection.
 *
 * WARNING: This ViewHelpers code should not be seen as best practice and works only inside a Template rendered via TypoScript currently.
 *
 */
class ContentCollectionViewHelper extends AbstractViewHelper {

	/**
	 * @var boolean
	 */
	protected $escapingInterceptorEnabled = FALSE;

	/**
	 * @param string $nodeName The name of the
	 * @return string
	 */
	public function render($nodeName) {
		/** @var \TYPO3\TypoScript\TypoScriptObjects\TemplateImplementation $parentTypoScriptObject */
		$parentTypoScriptObject = $this->viewHelperVariableContainer->getView()->getTypoScriptObject();
		$typoScriptRuntime = $parentTypoScriptObject->getTsRuntime();
		$parentTypoScriptPath = $parentTypoScriptObject->getPath();

		$autogeneratedTypoScriptPath = $parentTypoScriptPath . '/content/' . $nodeName;

		$contentRenderer = new \TYPO3\Neos\TypoScript\ContentCollectionImplementation($typoScriptRuntime, $autogeneratedTypoScriptPath, 'Kitsunet.Themeloper:ViewHelperContentCollection');

		return $contentRenderer->evaluate();
	}
}
